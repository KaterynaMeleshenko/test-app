{"version":3,"sources":["reportWebVitals.js","redux/types.js","Components/GetAPI.js","redux/reducers/newDataReducer.js","store.js","Components/Navigation/Navigation.js","Components/Home/Home.js","Components/SpecificPost/ShowComments.js","Components/Navigation/FlexboxInline.jsx","Components/Posts/ButtonStyled.jsx","Components/SpecificPost/AddComments.js","Components/Posts/PostBox.jsx","Components/Posts/ShowPosts.js","Components/Posts/Posts.js","Components/Navigation/Flexbox.jsx","Components/NewPost/NewPost.js","Components/SpecificPost/SelectInput.jsx","Components/SpecificPost/SpecificPost.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NEW_POST","DELETE_POST","EDIT_POST","NEW_COMMENT","initialState","posts","postsData","axios","get","res","data","forEach","post","onePost","id","title","content","body","push","GetAPIdataPosts","comments","commentsData","comment","oneComment","postId","GetAPIdataComments","currPostId","currCommId","newDataReducer","state","action","type","obj","find","index","indexOf","splice","filter","objeditedPost","indexOfEditedPost","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Navigation","className","to","activeClassName","Home","ShowComments","FaUserAlt","color","FlexBox","styled","div","FlexBoxInlineStyled","props","Button","button","ButtonStyled","AddComments","dispatch","useSelector","useDispatch","React","useState","newComment","setNewComment","newCommentAction","value","onChange","e","target","onClick","PostBox","PostBoxStyled","ShowPosts","ifEditable","setIfEditable","changedTitle","setChangedTitle","changedContent","setChangedContent","deletePostAction","editPostAction","contentEditable","document","getElementById","innerHTML","console","log","map","key","Posts","allPosts","FlexBoxStyled","NewPost","newTitle","setNewTitle","newContent","setNewContent","newPostAction","placeholder","style","width","SelectInput","select","SelectInputStyled","SpecificPost","allData","setTitle","App","exact","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.2fdeb25e.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const NEW_POST = \"NEW_POST\";\nexport const DELETE_POST = \"DELETE_POST\";\nexport const EDIT_POST = \"EDIT_POST\";\nexport const NEW_COMMENT = \"NEW_COMMENT\";\n","import axios from \"axios\";\n\nfunction GetAPIdataPosts() {\n  let postsData = [];\n  axios.get(`https://bloggy-api.herokuapp.com/posts`).then((res) => {\n    const posts = res.data;\n\n    posts.forEach((post) => {\n      const onePost = {\n        id: post.id,\n        title: post.title,\n        content: post.body,\n      };\n      postsData.push(onePost);\n    });\n  });\n\n  return postsData;\n}\n\nexport const dataPosts = GetAPIdataPosts();\n\nfunction GetAPIdataComments() {\n  let commentsData = [];\n  axios.get(`https://bloggy-api.herokuapp.com/comments`).then((res) => {\n    const comments = res.data;\n\n    comments.forEach((comment) => {\n      const oneComment = {\n        id: comment.id,\n        postId: comment.postId,\n        content: comment.body,\n      };\n      commentsData.push(oneComment);\n    });\n  });\n\n  return commentsData;\n}\n\nexport const dataComments = GetAPIdataComments();\n","import { NEW_POST, NEW_COMMENT, DELETE_POST, EDIT_POST } from \"../types\";\nimport { dataComments, dataPosts } from \"../../Components/GetAPI\";\n\nconst initialState = {\n  posts: dataPosts,\n  comments: dataComments,\n  currPostId: 3,\n  currCommId: 3,\n};\n\nfunction newDataReducer(state = initialState, action) {\n  switch (action.type) {\n    case NEW_POST:\n      return {\n        posts: [\n          ...state.posts,\n          {\n            id: state.currPostId + 1,\n            title: action.post.title,\n            content: action.post.content,\n          },\n        ],\n        comments: [...state.comments],\n        currPostId: state.currPostId + 1,\n        currCommId: state.currCommId,\n      };\n    case NEW_COMMENT:\n      return {\n        posts: [...state.posts],\n        comments: [\n          ...state.comments,\n          {\n            id: state.currCommId + 1,\n            postId: action.comment.postId,\n            content: action.comment.content,\n          },\n        ],\n        currPostId: state.currPostId,\n        currCommId: state.currCommId + 1,\n      };\n    case DELETE_POST:\n      let obj = state.posts.find((obj) => obj.id === action.data.postId);\n      let index = state.posts.indexOf(obj);\n      state.posts.splice(index, 1);\n\n      return {\n        posts: state.posts,\n        comments: state.comments.filter(\n          (obj) => obj.postId !== action.data.postId\n        ),\n        currPostId: state.currPostId,\n        currCommId: state.currCommId,\n      };\n    case EDIT_POST:\n      let objeditedPost = state.posts.find(\n        (obj) => obj.id === action.data.postId\n      );\n      let indexOfEditedPost = state.posts.indexOf(objeditedPost);\n      state.posts[indexOfEditedPost].title = action.data.title;\n      state.posts[indexOfEditedPost].content = action.data.content;\n\n      return {\n        posts: state.posts,\n        comments: [...state.comments],\n        currPostId: state.currPostId,\n        currCommId: state.currCommId,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default newDataReducer;\n","import thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport newDataReducer from \"./redux/reducers/newDataReducer\";\n\nconst reducer = combineReducers({\n  newDataReducer,\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Navigation() {\n  return (\n    <nav className=\"navigation\">\n      <NavLink to=\"/home\" activeClassName={\"selected\"}>\n        HOME\n      </NavLink>\n      <NavLink to=\"/allposts\" activeClassName={\"selected\"}>\n        ALL POSTS\n      </NavLink>\n      <NavLink to=\"/specificpost\" activeClassName={\"selected\"}>\n        SPECIFIC POST\n      </NavLink>\n      <NavLink to=\"/newpost\" activeClassName={\"selected\"}>\n        NEW POST\n      </NavLink>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport Navigation from \"../Navigation/Navigation\";\n\nfunction Home() {\n  return (\n    <div>\n      <Navigation />\n      <div className=\"homepage\">Welcome to my test application!</div>\n      <h1>\n        (Created by Ekaterina Meleshenko, applicant for JavaScript (React)\n        developer position)\n      </h1>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { FaUserAlt } from \"@react-icons/all-files/fa/FaUserAlt\";\n\nexport default function ShowComments({ id, postId, content }) {\n  return (\n    <div className=\"comment-content\">\n      <FaUserAlt color=\"purple\" />\n      <span className=\"comment\">{content}</span>\n    </div>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FlexBox = styled.div`\n  display: flex;\n  flex-direction: raw;\n  text-align: center;\n  justify-content: center;\n  align-content: center;\n`;\n\nfunction FlexBoxInlineStyled(props) {\n  return <FlexBox {...props} />;\n}\n\nexport default FlexBoxInlineStyled;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  margin: auto;\n  margin-top: 20px;\n  color: purple;\n  box-shadow: 0 0 0 2px purple;\n  padding: 5px;\n  width: 232px;\n  height: 42px;\n  text-align: center;\n  text-transform: uppercase;\n  letter-spacing: 3px;\n  position: relative;\n  overflow: hidden;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nfunction ButtonStyled(props) {\n  return <Button {...props} />;\n}\n\nexport default ButtonStyled;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { NEW_COMMENT } from \"../../redux/types\";\nimport FlexBoxInlineStyled from \"../Navigation/FlexboxInline\";\nimport ButtonStyled from \"../Posts/ButtonStyled\";\n\nexport default function AddComments({ id, postId, content }) {\n  const data = useSelector((state) => state.newDataReducer);\n  const dispatch = useDispatch();\n  const [newComment, setNewComment] = React.useState(\"\");\n\n  const newCommentAction = {\n    type: NEW_COMMENT,\n    comment: {\n      postId: postId,\n      content: newComment,\n    },\n  };\n\n  return (\n    <FlexBoxInlineStyled>\n      <textarea\n        className=\"comment-area\"\n        type=\"text\"\n        value={newComment}\n        onChange={(e) => {\n          setNewComment(e.target.value);\n        }}\n      />\n      <ButtonStyled\n        className=\"add-btn\"\n        onClick={() => {\n          dispatch(newCommentAction);\n          setNewComment(\"\");\n        }}\n      >\n        {\" \"}\n        ADD NEW COMMENT\n      </ButtonStyled>\n    </FlexBoxInlineStyled>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst PostBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-self: center;\n  align-content: center;\n  border: 3px dashed purple;\n  width: 740px;\n  margin: auto;\n  margin-bottom: 20px;\n  padding: 20px;\n  border-radius: 10px;\n`;\n\nfunction PostBoxStyled(props) {\n  return <PostBox {...props} />;\n}\n\nexport default PostBoxStyled;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { DELETE_POST, EDIT_POST } from \"../../redux/types\";\nimport ShowComments from \"../SpecificPost/ShowComments\";\nimport AddComments from \"../SpecificPost/AddComments\";\nimport PostBoxStyled from \"./PostBox\";\nimport ButtonStyled from \"./ButtonStyled\";\nimport FlexBoxInlineStyled from \"../Navigation/FlexboxInline\";\n\nexport default function ShowPosts({ id, title, content }) {\n  const data = useSelector((state) => state.newDataReducer);\n  const dispatch = useDispatch();\n\n  const [ifEditable, setIfEditable] = useState(\"false\");\n  const [changedTitle, setChangedTitle] = useState(title);\n  const [changedContent, setChangedContent] = useState(content);\n\n  const deletePostAction = {\n    type: DELETE_POST,\n    data: {\n      postId: id,\n    },\n  };\n\n  const editPostAction = {\n    type: EDIT_POST,\n    data: {\n      postId: id,\n      title: changedTitle,\n      content: changedContent,\n    },\n  };\n\n  return (\n    <PostBoxStyled>\n      <h2 id={\"title-\" + id} contentEditable={ifEditable}>\n        {title}\n      </h2>\n      <div\n        id={\"content-\" + id}\n        className=\"post-content\"\n        contentEditable={ifEditable}\n      >\n        {content}\n      </div>\n      <FlexBoxInlineStyled>\n        <ButtonStyled\n          className=\"edit-btn\"\n          onClick={() => {\n            setIfEditable(\"true\");\n          }}\n        >\n          {\" \"}\n          EDIT POST\n        </ButtonStyled>\n        <ButtonStyled\n          className=\"save-btn\"\n          onClick={() => {\n            setChangedTitle(document.getElementById(\"title-\" + id).innerHTML);\n            setChangedContent(\n              document.getElementById(\"content-\" + id).innerHTML\n            );\n            dispatch(editPostAction);\n            console.log(data.posts);\n            setIfEditable(\"false\");\n          }}\n        >\n          {\" \"}\n          DBL CLICK TO SAVE CHANGES\n        </ButtonStyled>\n        <ButtonStyled\n          className=\"del-btn\"\n          onClick={() => {\n            dispatch(deletePostAction);\n          }}\n        >\n          {\" \"}\n          DELETE POST\n        </ButtonStyled>\n      </FlexBoxInlineStyled>\n      <h2>Comments:</h2>\n      {data.comments\n        .filter((comment) => comment.postId === id)\n        .map((comment) => (\n          <ShowComments {...comment} key={comment.id} />\n        ))}\n      <AddComments postId={id} />\n    </PostBoxStyled>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Navigation from \"../Navigation/Navigation\";\nimport ShowPosts from \"./ShowPosts\";\n\nfunction Posts() {\n  const allPosts = useSelector((state) => state.newDataReducer);\n\n  return (\n    <>\n      <Navigation />\n      <h1>ALL POSTS</h1>\n      {allPosts.posts.map((post) => (\n        <ShowPosts {...post} key={post.id} />\n      ))}\n    </>\n  );\n}\n\nexport default Posts;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FlexBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  justify-content: center;\n  align-self: center;\n  align-content: center;\n`;\n\nfunction FlexBoxStyled(props) {\n  return <FlexBox {...props} />;\n}\n\nexport default FlexBoxStyled;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { NEW_POST } from \"../../redux/types\";\nimport FlexBoxStyled from \"../Navigation/Flexbox\";\nimport Navigation from \"../Navigation/Navigation\";\nimport ButtonStyled from \"../Posts/ButtonStyled\";\n\nexport default function NewPost() {\n  const data = useSelector((state) => state.newDataReducer);\n  const dispatch = useDispatch();\n  const [newTitle, setNewTitle] = React.useState(\"\");\n  const [newContent, setNewContent] = React.useState(\"\");\n\n  const sizeStyle = {\n    width: \"740px\",\n  };\n\n  const newPostAction = {\n    type: NEW_POST,\n    post: {\n      title: newTitle,\n      content: newContent,\n    },\n  };\n  console.log(data.posts);\n\n  return (\n    <>\n      <Navigation />\n      <h1>ADD YOUR NEW POST</h1>\n      <FlexBoxStyled>\n        <input\n          className=\"title-input\"\n          type=\"text\"\n          placeholder=\"Post's title\"\n          value={newTitle}\n          onChange={(e) => {\n            setNewTitle(e.target.value);\n          }}\n        />\n        <textarea\n          className=\"post-area\"\n          type=\"text\"\n          value={newContent}\n          placeholder=\"Post's content\"\n          onChange={(e) => {\n            setNewContent(e.target.value);\n          }}\n        />\n        <ButtonStyled\n          style={sizeStyle}\n          className=\"add-btn\"\n          onClick={() => {\n            dispatch(newPostAction);\n            setNewTitle(\"\");\n            setNewContent(\"\");\n          }}\n        >\n          {\" \"}\n          ADD NEW POST\n        </ButtonStyled>\n      </FlexBoxStyled>\n    </>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst SelectInput = styled.select`\n  margin: auto;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  font-size: 18px;\n  padding: 10px 0px;\n  width: 780px;\n  padding-left: 20px;\n  border-radius: 10px;\n  border: 1px solid purple;\n`;\n\nfunction SelectInputStyled(props) {\n  return <SelectInput {...props} />;\n}\n\nexport default SelectInputStyled;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport FlexBoxInlineStyled from \"../Navigation/Flexbox\";\nimport Navigation from \"../Navigation/Navigation\";\nimport ShowPosts from \"../Posts/ShowPosts\";\nimport SelectInputStyled from \"./SelectInput\";\n\nfunction SpecificPost() {\n  const allData = useSelector((state) => state.newDataReducer);\n\n  const [title, setTitle] = React.useState(\"Show nothing\");\n\n  return (\n    <div>\n      <Navigation />\n      <FlexBoxInlineStyled>\n        <h1>CHOOSE A POST BY ITS TITLE</h1>\n        <SelectInputStyled\n          value={title}\n          onChange={(e) => {\n            setTitle(e.target.value);\n          }}\n        >\n          <option>Show nothing</option>\n          {allData.posts.map((post) => {\n            return <option key={post.id}>{post.title}</option> || null;\n          })}\n        </SelectInputStyled>\n      </FlexBoxInlineStyled>\n      {allData.posts\n        .filter((post) => post.title === title)\n        .map((post) => (\n          <ShowPosts {...post} key={post.id} />\n        ))}\n    </div>\n  );\n}\n\nexport default SpecificPost;\n","import {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"./Components/Home/Home\";\nimport Posts from \"./Components/Posts/Posts\";\nimport NewPost from \"./Components/NewPost/NewPost\";\nimport SpecificPost from \"./Components/SpecificPost/SpecificPost\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/test-app\">\n          <Redirect to=\"/home\" />\n        </Route>\n        <Route exact path=\"/\">\n          <Redirect to=\"/home\" />\n        </Route>\n        <Route path=\"/home\" component={Home} />\n        <Route path=\"/allposts\" component={Posts} />\n        <Route path=\"/specificpost\" component={SpecificPost} />\n        <Route path=\"/newpost\" component={NewPost} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}